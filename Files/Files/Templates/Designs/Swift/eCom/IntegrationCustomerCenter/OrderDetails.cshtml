@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@{
	string contentPadding = Pageview.CurrentParagraph.Item["ContentPadding"] != null ? Pageview.CurrentParagraph.Item["ContentPadding"].ToString() : "";
	contentPadding = contentPadding == "none" ? "px-0" : contentPadding;
	contentPadding = contentPadding == "small" ? "p-2 p-md-3" : contentPadding;
	contentPadding = contentPadding == "large" ? "p-4 p-md-5" : contentPadding;
	var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
	string theme = !string.IsNullOrEmpty(themeRaw) ? " h-100 theme " + themeRaw.Replace(" ", "").Trim().ToLower() : "";

	string showPricesWithVat = Pageview.Area.EcomPricesWithVat.ToLower();
	bool neverShowVat = string.IsNullOrEmpty(showPricesWithVat);
	string currencyCode = !string.IsNullOrEmpty(GetString("CurrencyCode")) ? GetString("CurrencyCode") + " " : "";
}

<div class="@(contentPadding)">
	<header class="p-3 border-bottom @(theme)">
		<div class="d-flex flex-row align-items-center gap-3">
			<h1 class="h6 m-0 flex-fill text-muted">@Translate("Your order")</h1>
			<a href="/Admin/public/CustomerCenter/RequestExternalPdf.aspx?type=OpenOrder&id=@GetString("ID")&forceDownload=true" class="d-inline me-2" title="@Translate("Download PDF")">@Translate("Download")</a>
			<button onclick="javascript:print()" class="btn btn-link p-0">@Translate("Print")</button>
		</div>
	</header>

	<table class="table d-print-table m-0 @(theme)">
		@if (!string.IsNullOrEmpty(GetString("ID")))
		{
			<tr>
				<td class="">@Translate("Order number")</td>
				<td class="text-end">@GetString("ID")</td>
			</tr>
		}

		@if (!string.IsNullOrEmpty(GetString("Date")))
		{
			<tr>
				<td>@Translate("Order date")</td>
				<td class="text-end">@GetString("Date")</td>
			</tr>
		}

		<tr>
			<td>@Translate("Delivery address")</dt>
			<td class="text-end">
				@if (!string.IsNullOrEmpty(GetString("DeliveryName")))
				{
					<div>@GetString("DeliveryName")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("DeliveryAddress")))
				{
					<div>@GetString("DeliveryAddress")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("DeliveryAddress2")))
				{
					<div>@GetString("DeliveryAddress2")</div>
				}

				<div>
					@if (!string.IsNullOrEmpty(GetString("DeliveryZip")))
					{
						<span>@GetString("DeliveryZip")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("DeliveryCity")))
					{
						<span>@GetString("DeliveryCity")</span>
					}
				</div>

				<div>
					@if (!string.IsNullOrEmpty(GetString("DeliveryRegion")))
					{
						<span>@GetString("DeliveryRegion")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("DeliveryCountry")))
					{
						<span>@GetString("DeliveryCountry")</span>
					}
				</div>

				@if (!string.IsNullOrEmpty(GetString("DeliveryEmail")))
				{
					<div>@GetString("DeliveryEmail")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("DeliveryPhone")))
				{
					<div>@GetString("DeliveryPhone")</div>
				}
			</td>
		</tr>

		<tr>
			<td>@Translate("Billing address")</dt>
			<td class="text-end">
				@if (!string.IsNullOrEmpty(GetString("CustomerName")))
				{
					<div>@GetString("CustomerName")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("CustomerAddress")))
				{
					<div>@GetString("CustomerAddress")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("CustomerAddress2")))
				{
					<div>@GetString("CustomerAddress2")</div>
				}

				<div>
					@if (!string.IsNullOrEmpty(GetString("CustomerZip")))
					{
						<span>@GetString("CustomerZip")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("CustomerCity")))
					{
						<span>@GetString("CustomerCity")</span>
					}
				</div>

				<div>
					@if (!string.IsNullOrEmpty(GetString("CustomerRegion")))
					{
						<span>@GetString("CustomerRegion")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("CustomerCountry")))
					{
						<span>@GetString("CustomerCountry")</span>
					}
				</div>

				@if (!string.IsNullOrEmpty(GetString("CustomerEmail")))
				{
					<div>@GetString("CustomerEmail")</div>
				}
				@if (!string.IsNullOrEmpty(GetString("CustomerPhone")))
				{
					<div>@GetString("CustomerPhone")</div>
				}
			</td>
		</tr>

		@if (!string.IsNullOrEmpty(GetString("ShippingMethodName")))
		{
			<tr>
				<td>@Translate("Delivery method")</td>
				<td class="text-end">@GetString("ShippingMethodName")</td>
			</tr>
		}

		@if (!string.IsNullOrEmpty(GetString("PaymentMethodName")))
		{
			<tr>
				<td>@Translate("Payment method")</td>
				<td class="text-end">
					<span>@GetString("PaymentMethodName")</span>
				</td>
			</tr>
		}
	</table>

	<section class="p-3 d-flex flex-column gap-3 @(theme)">
		@foreach (var orderline in GetLoop("OrderLinesLoop"))
		{
			string productName = !string.IsNullOrEmpty(orderline.GetString("ProductName")) ? orderline.GetString("ProductName") + " " + orderline.GetString("ProductNumber") : orderline.GetString("ProductNumber");
			string productPrice = showPricesWithVat.ToLower() == "true" ? currencyCode + orderline.GetString("UnitPriceWithVAT") : currencyCode + orderline.GetString("UnitPriceWithoutVAT");
			string productPriceTotal = showPricesWithVat.ToLower() == "true" ? currencyCode + orderline.GetString("PriceWithVAT") : currencyCode + orderline.GetString("PriceWithoutVAT");

			var orderlineQuantity = orderline.GetString("Quantity");
			var productId = orderline.GetString("ProductNumber");
			var variantId = orderline.GetString("ProductVariantID");

			var orderlineType = !string.IsNullOrEmpty(orderline.GetString("ParentLineID")) ? "discountOrFee" : "product";

			<article>
				<div class="grid grid-9 h-100">
					<div class="g-col-9 g-col-md-5">
						@if (orderlineType == "product") { 
							<h2 class="h6 mb-3 fw-bold">@productName</h2>

							<ul class="list-unstyled text-muted mb-0">
								<li>
									<span>@Translate("Price"):</span>
									<span>@productPrice</span>

								</li>
								<li>
									<span>@Translate("Quantity"):</span>
									<span>@orderlineQuantity</span>
								</li>
							</ul>
						} 
					</div>

					<div class="g-col-9 g-col-md-4 text-end">
						<h6 class="h6 m-0">
							<span class="text-price">@productPriceTotal</span>
						</h6>
					</div>
				</div>
			</article>
		}

		@{
			string orderSubtotal = showPricesWithVat.ToLower() == "true" ? GetString("PriceWithVAT") : GetString("PriceWithoutVAT");

			<div class="cart-total grid mt-3">
				<div class="g-col-12">
					<dl class="m-0">
						<div class="d-flex my-1 pt-4 border-dark border-top"></div>
						<dt class="flex-fill fw-bold">@Translate("Total")</dt>
						<dd class="flex-fill mb-0 text-end">
							<span class="text-price fw-bold">@(currencyCode) @(orderSubtotal)</span>
							@if (!neverShowVat && showPricesWithVat == "false")
							{
								<span class="fs-7 fw-normal d-block">@Translate("Excl. VAT")</span>
							}
							@if (!neverShowVat && showPricesWithVat == "true")
							{
								<span class="fs-7 fw-normal d-block">@Translate("Incl. VAT")</span>
							}
						</dd>
					</dl>
				</div>
			</div>
		}
	</section>
</div>
