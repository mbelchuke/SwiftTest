@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using Dynamicweb
@using Dynamicweb.Environment

@{ 
	string swiftVersion = ReadFile("~/Files/Templates/Designs/Swift/swift_version.txt");
	@* Branding Themes Fonts *@
	var brandingPageId = Model.Area.Item.GetLink("BrandingPage") != null ? Model.Area.Item.GetLink("BrandingPage").PageId : 0;
	var themePageId = Model.Area.Item.GetLink("ThemesPage") != null ? Model.Area.Item.GetLink("ThemesPage").PageId : 0;

	string customHeaderInclude = Model.Area.Item.GetFile("CustomHeaderInclude") != null ? Model.Area.Item.GetFile("CustomHeaderInclude").Name : string.Empty;

	string masterTheme = !string.IsNullOrWhiteSpace(Model.Area.Item.GetRawValueString("Theme")) ? " theme " + Model.Area.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";

	string aosInitScript = "AOS.init({offset: 240, duration: 600, delay: 100});  disable: window.matchMedia('(prefers-reduced-motion: reduce)');";

	var brandingPage = Dynamicweb.Services.Pages?.GetPage(brandingPageId) ?? null;
	var themesParagraphLastChanged = Services.Paragraphs.GetParagraphsByPageId(themePageId).OrderByDescending(p => p.Audit.LastModifiedAt).FirstOrDefault();
	var cssLastModified = brandingPage.Audit.LastModifiedAt > themesParagraphLastChanged.Audit.LastModifiedAt ? brandingPage.Audit.LastModifiedAt : themesParagraphLastChanged.Audit.LastModifiedAt;

	var cssStyleFileInfo = new System.IO.FileInfo(Dynamicweb.Core.SystemInformation.MapPath("~/Files/Templates/Designs/Swift/Assets/css/styles.css"));
	var jsFileInfo = new System.IO.FileInfo(Dynamicweb.Core.SystemInformation.MapPath("~/Files/Templates/Designs/Swift/Assets/js/scripts.js"));

	string googleAnalyticsTrackingID = Model.Area.Item.GetString("GoogleAnalyticsTrackingID");
	bool allowCookies = CookieManager.GetCookieOptInLevel() == 0 || !CookieManager.CookieOptInLevelExists ? false : true;
}

<!doctype html>
<html lang="@Pageview.Area.CultureInfo.TwoLetterISOLanguageName">
    <head>
		<!-- @swiftVersion -->
        @* Required meta tags *@
		<meta charset="utf-8">
		<meta name="viewport" content="height=device-height, width=device-width, initial-scale=1.0">
		<link rel="preconnect" href="https://fonts.gstatic.com" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preload" href="~/Files/Templates/Designs/Swift/Assets/css/styles.css?@cssStyleFileInfo.LastWriteTime.Ticks" as="style">
		<link rel="preload" href="~/Files/Templates/Designs/Swift/Assets/js/aos.js?@jsFileInfo.LastWriteTime.Ticks" as="script">
		<link rel="preload" href="~/Files/Templates/Designs/Swift/Assets/js/scripts.js?@jsFileInfo.LastWriteTime.Ticks" as="script">

		<link rel="shortcut icon" href="~/Files/Templates/Designs/Swift/Assets/Images/favicon.png" />
		<link rel="apple-touch-icon" href="~/Files/Templates/Designs/Swift/Assets/Images/logo_transparent.png" />
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<meta name="googlebot-news" content="nosnippet">

		@Model.MetaTags

		<title>@Model.Title</title>


		@* Bootstrap + Swift stylesheet *@
		<link href="~/Files/Templates/Designs/Swift/Assets/css/styles.css?@cssStyleFileInfo.LastWriteTime.Ticks" rel="stylesheet" media="all" type="text/css">

		@* Branding and Themes min stylesheet *@
		<link href="~/Files/Templates/Designs/Swift/_parsed/Swift_css/Swift_styles_@(Model.Area.ID).min.css?@cssLastModified.Ticks" rel="stylesheet" media="all" type="text/css" data-last-modified-content="@cssLastModified">
		<script src="~/Files/Templates/Designs/Swift/Assets/js/aos.js?@jsFileInfo.LastWriteTime.Ticks" defer></script>
		<script src="~/Files/Templates/Designs/Swift/Assets/js/scripts.js?@jsFileInfo.LastWriteTime.Ticks" async></script>

		@* Global site tag (gtag.js) - Google Analytics *@
		@if (!string.IsNullOrWhiteSpace(googleAnalyticsTrackingID) && allowCookies)
		{
			<script src="https://www.googletagmanager.com/gtag/js?id=@googleAnalyticsTrackingID" async></script>
			<script>
				window.dataLayer = window.dataLayer || [];
				function gtag() { window.dataLayer.push(arguments); }
				gtag('js', new Date());
				gtag('config', '@googleAnalyticsTrackingID');
			</script>
		}

		@if (!string.IsNullOrWhiteSpace(customHeaderInclude)) {
			@RenderPartial($"Components/Custom/{customHeaderInclude}")
		}
</head>

    <body class="brand @(masterTheme)" onload="@aosInitScript">

        <main id="content">
            @ContentPlaceholder()
        </main>
    
        @* Render any offcanvas menu here *@
		@RenderSnippet("offcanvas")
    </body>

</html>
