@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>
@{ 
	string containerClass = "container-xl";

	string width = Model.Item.GetRawValueString("Width", "");
	if (width == "stretch") {
		containerClass = "container-fluid";
	}
	if (width == "none") {
		containerClass = "overflow-hidden";
	}

	string rowHeight = Model.Item.GetRawValueString("RowHeight", "0");
	rowHeight = "py-" + rowHeight;

	string hideOnScroll = !string.IsNullOrEmpty(Model?.Item?.GetString("HideOnScroll")) ? Model.Item.GetRawValueString("HideOnScroll").ToLower() : "";
	hideOnScroll = hideOnScroll == "hide" ? "js-hide-on-scroll" : "";

	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";
	string alternativeTheme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("AlternativeTheme")) ? " theme " + Model.Item.GetRawValueString("AlternativeTheme").Replace(" ", "").Trim().ToLower() : "";
	string mainTheme = theme;

	string headerCssClass = "sticky-top";
	if (Pageview.Page.PropertyItem != null) { 
		headerCssClass = Pageview.Page.PropertyItem["MoveThisPageBehindTheHeader"] != null ? Pageview.Page.PropertyItem["MoveThisPageBehindTheHeader"].ToString() : "sticky-top";
	}
	headerCssClass = headerCssClass == "" ? "sticky-top" : headerCssClass;
	headerCssClass = Pageview.IsVisualEditorMode ? "" : headerCssClass;

	string themeSwitchers = "";
	string themeAnimated = "";
	if (headerCssClass == "fixed-top") {
		theme = alternativeTheme;
		themeSwitchers = "data-main-theme=\"" + mainTheme + "\" data-alternative-theme=\"" + alternativeTheme + "\"";
		themeAnimated = "theme-animated ";
	}

	if (Pageview.IsVisualEditorMode || !string.IsNullOrWhiteSpace(Model.Column(1).Output()))
	{
		<div class="@rowHeight @themeAnimated @theme @hideOnScroll item_@Model.Item.SystemName.ToLower()" @themeSwitchers>
			<div class="@containerClass">
				<div class="d-flex flex-row">
					<div class="col">
						@Model.Column(1).Output()
					</div>
				</div>
			</div>
		</div>
	}
}
