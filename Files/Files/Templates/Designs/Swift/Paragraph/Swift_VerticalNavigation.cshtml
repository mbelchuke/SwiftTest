@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend.Navigation

@{
	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";

	string contentPadding = Model.Item.GetRawValueString("ContentPadding", "");
	contentPadding = contentPadding == "none" ? " px-0 py-3" : contentPadding;
	contentPadding = contentPadding == "small" ? " px-3 py-3" : contentPadding;
	contentPadding = contentPadding == "large" ? " ps-5 pe-3 py-3" : contentPadding;

	var navigationSettings = new NavigationSettings();
	navigationSettings.StartLevel = 1;
	navigationSettings.StopLevel = 10;
	navigationSettings.ExpandMode = ExpandMode.All;
	navigationSettings.Parameters.Add("ContentPadding", contentPadding);
	navigationSettings.Parameters.Add("Theme", Model.Item.GetString("Theme"));
	navigationSettings.Parameters.Add("Layout", Model.Item.GetString("Layout"));
	navigationSettings.Parameters.Add("HideTexts", Model.Item.GetBoolean("HideTexts"));
	navigationSettings.Parameters.Add("HideIcons", Model.Item.GetBoolean("HideIcons"));
	navigationSettings.Parameters.Add("ShowSignOutLink", Model.Item.GetBoolean("ShowSignOutLink"));

	if (!string.IsNullOrEmpty(Model.Item.GetString("NavigationRoot"))) {
		string root = Model.Item.GetString("NavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			navigationSettings.RootPageId = rootPageId;
		}
		navigationSettings.StartLevel = 2;
	} else {
		navigationSettings.StartLevel = 1;
	}
}

<div class="h-100@(theme) item_@Model.Item.SystemName.ToLower()">
	@if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h3 class="@contentPadding">@Model.Item.GetString("Title")</h3>
	}

	@Navigation.RenderNavigation("Navigation/Vertical.cshtml", navigationSettings)
</div>
