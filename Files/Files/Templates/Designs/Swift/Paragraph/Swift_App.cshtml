@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>

@{ 
	string contentPadding = Model.Item?.GetRawValueString("contentPadding", "");
	string moduleOutput = Model.GetModuleOutput();

	string layout = Model.Item.GetRawValueString("Layout", "");
	layout = layout == "alignLeft" ? "" : layout;
	layout = layout == "alignLeftMiddle" ? "d-flex align-items-center text-start" : layout;

	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";
}

@if ((!string.IsNullOrEmpty(contentPadding) && contentPadding != "none") || !string.IsNullOrEmpty(theme) || !string.IsNullOrEmpty(layout)) {
	<div class="@(layout) @(theme) h-100 item_@Model.Item.SystemName.ToLower()">
		<div class="@(contentPadding) w-100">
			@moduleOutput
		</div>
	</div>
} else {
	<div class="item_@Model.Item.SystemName.ToLower()">
		@moduleOutput
	</div>
}

@if (Pageview.IsVisualEditorMode && string.IsNullOrEmpty(moduleOutput)) {
    <div class="alert alert-info" role="alert">
        <span>@Translate("App: Edit this column to configure")</span>
    </div>
}

